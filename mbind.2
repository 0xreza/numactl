.TH MBIND 3 "Nov 2003" "SuSE Labs" "Linux Programmer's Manual"
.SH NAME
mbind \- Set memory policy for an memory range
.SH SYNOPSIS
.B "#include <numaif.h>"
.br
.B int mbind(void *start, unsigned long len, int policy, unsigned long *nodemask,
	  unsigned long maxnode, unsigned flags) 
.SH DESCRIPTION
.B mbind
sets the NUMA memory 
.I policy 
for the memory range starting with
.I start
and length
.I len. 
The memory of a NUMA machine is divided into multiple nodes.
The memory policy defines in which node memory is allocated. 
.I mbind
has only an effect for new allocations; when the pages inside 
the range have been already touched before setting the policy
the policy has no effect.

Available policies are 
.B MPOL_DEFAULT,
.B MPOL_BIND,
.B MPOL_INTERLEAVE,
.B MPOL_PREFERED.
All policies except 
.I MPOL_DEFAULT
require to specify the nodes they apply to in the
.B nodemask 
parameter.
.I nodemask 
is a bit field of nodes that contains upto 
.B maxnode
bits.  
The nodemask bit field size is rounded to the next multiple of
.I sizeof(unsigned long),
but the kernel will only use bits upto
.I maxnode.
The
.B flags
parameter is currently unused and should be passed as 0.

The 
.I MPOL_DEFAULT
policy is the default and means to use the underlying process policy
(which can be modified with
.I set_mempolicy(2)
). Unless the process policy has been changed this means to allocate
memory on the node of the CPU that triggered the allocation. 
.I nodemask 
should be passed as NULL.

The
.I MPOL_BIND
policy is a strict policy that restricts memory allocation to the 
nodes specified in 
.I nodemask.
There won't be allocations on other nodes.

.I MPOL_INTERLEAVE
interleaves allocations to the nodes specified in 
.I nodemask.
This optimizes for bandwidth instead of latency.
To be effective the memory area should be fairly large, at least 1MB or bigger.

.I MPOL_PREFERED
sets the prefered node for allocation. The kernel will try to allocate in this
node first and fall back to other nodes when the prefered nodes is low on free 
memory.  Only one node can be set in 
.I nodemask.

.SH RETURN VALUE
.I mbind
returns -1 when an error occurred, otherwise 0.

.\" .SH ERRORS
.\" writeme

.SH NOTES
For a higher level interface it is recommended to use the functions in
.I numa(3). 

Until glibc supports these system calls you can link with 
.I -lnuma
to get system call definitions.

.SH SEE ALSO
.I numa(3), 
.I numactl(8), 
.I set_mempolicy(2),
.I get_mempolicy(2), 
.I mmap(2)
